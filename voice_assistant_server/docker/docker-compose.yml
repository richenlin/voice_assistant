version: '3.8'

services:
  voice_assistant_server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: voice_assistant_server
    ports:
      - "8080:8080"
    volumes:
      - ../config:/app/config:ro
      - ../models:/app/models:ro
      - ../logs:/app/logs
    environment:
      - GIN_MODE=release
      - LOG_LEVEL=info
    restart: unless-stopped
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    # 健康检查
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 网络配置
    networks:
      - voice_assistant_network

  # 可选：Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: voice_assistant_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - voice_assistant_network

  # 可选：Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: voice_assistant_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - voice_assistant_network

networks:
  voice_assistant_network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data: 